return {
  "stevearc/conform.nvim",
  event = { "BufReadPre", "BufNewFile" },
  config = function()
    local conform = require "conform"

    conform.setup {
      formatters = {
        eslint_d = {
          command = "eslint_d",
          args = { "--stdin", "--stdin-filename", "$FILENAME" },
          rootPatterns = { ".eslintrc.js", ".eslintrc.json", ".eslintrc" },
          require_cwd = true,
        },
        prettier = {
          command = "prettier",
          args = { "--stdin-filepath", "$FILENAME" },
          rootPatterns = {
            ".prettierrc",
            ".prettierrc.json",
            ".prettierrc.yaml",
            ".prettierrc.yml",
            ".prettierrc.js",
            "package.json",
          },
          require_cwd = true,
        },
        stylua = {
          command = "stylua",
          args = { "-" },
          rootPatterns = { ".stylua.toml" },
        },
        isort = {
          command = "isort",
          args = { "-" },
          rootPatterns = { "pyproject.toml" },
        },
        black = {
          command = "black",
          args = { "-" },
          rootPatterns = { "pyproject.toml" },
        },
      },
      formatters_by_ft = {
        javascript = { "prettierd" },
        typescript = { "prettierd" },
        javascriptreact = { "prettierd" },
        typescriptreact = { "prettierd" },
        svelte = { "prettier" },
        css = { "prettier" },
        html = { "prettier" },
        json = { "prettier" },
        yaml = { "prettier" },
        markdown = { "prettier" },
        graphql = { "prettier" },
        lua = { "stylua" },
        python = { "isort", "black" },
      },
      format_on_save = {
        lsp_fallback = true,
        async = false,
        timeout_ms = 500,
      },
    }

    vim.keymap.set(
      { "n", "v" },
      "<leader>mp",
      function()
        conform.format {
          lsp_fallback = true,
          async = false,
          timeout_ms = 500,
        }
      end,
      { desc = "Format file or range (in visual mode)" }
    )
  end,
}
