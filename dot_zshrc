source ~/.shhhhh

# ZPlug Plugin Manager
export ZPLUG_HOME=/opt/homebrew/opt/zplug
source $ZPLUG_HOME/init.zsh

# Load zplug plugins
zplug "zplug/zplug", hook-build:"zplug --self-manage"
zplug "Licheam/zsh-ask"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-history-substring-search"
zplug "zsh-users/zsh-syntax-highlighting"
zplug "zpm-zsh/colors"
zplug "agkozak/zsh-z"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Then, source plugins and add commands to $PATH
zplug load # --verbose

# Default username to hide "user@hostname" info
DEFAULT_USER="$(whoami)"

export EDITOR='nvim'

# if [ -S ~/.ssh/socket ]; then
#     eval $(ssh-agent)
#     ln -sf "$SSH_AUTH_SOCK" ~/.ssh/socket
# fi
# export SSH_AUTH_SOCK=~/.ssh/socket
export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock

export PATH="$(brew --prefix)/bin:$PATH"

# ----------
# pgsql config
# ----------
export ODS_DEV="db-ods.dev.edgeapps.net"
export ODS_STAGE="db-ods.stage.edgeapps.net"
export ODS_PROD="db-ods2.prod.edgeapps.net"
export CAT_STAGE="db-catalyst.stage.edgeapps.net"
export PGPASSFILE='/Users/raymonddoran/.pgpass'

# ------------------
# source 
# ------------------
source $HOME/.functions
source $HOME/ae.zsh

# ---------------
# AWS Vault 
# ---------------
export AWS_VAULT_PASS_PREFIX=aws-vault
# export AWS_VAULT_BACKEND=pass
export AWS_VAULT_KEYCHAIN_NAME=login
export AWS_PROFILE=edge-prod

# ------------
# Leon Config
# ------------
export LEON_AFTER_SPEECH=true
export LEON_STT=true
export LEON_STT_PROVIDER=coqui-stt
export LEON_TTS=true
export LEON_TTS_PROVIDER=flite

# ------------
# ZK Config
# ------------
ZK_NOTEBOOK_DIR="$HOME/zk"

# ------------
# Theme
# ------------
eval "$(starship init zsh)"

# EXA / COLORLS
# Use 'eza' if it is available, if not try colorls
if [ -x "$(command -v eza)" ]; then
  alias ls="eza --icons"
  alias la="eza --long --all --group --grid --icons --color-scale-mode=gradient"
  alias lt="eza --tree --icons --level=3"
elif [ -x "$(command -v colorls)" ]; then
  alias lc='colorls -la'
  alias ls='colorls --sd -A'
fi

# BAT 
if [ -x "$(command -v bat)" ]; then
  alias cat='bat'
fi

# TLDR
if [ -x "$(command -v tldr)" ]; then 
  alias manf='/usr/bin/man'
  alias man='tldr'
fi

# vim
if [ -x "$(command -v nvim)" ]; then
  alias v="nvim"
  alias vi="nvim"
elif [ -x "$(command -v vim)" ]; then
  alias v="vim"
  alias vi="vim"
fi

if [ -x "$(command -v lynx)" ]; then
  alias ddg="s -b lynx -p duckduckgo"
fi

if [ -x "$(command -v terminalizer)" ]; then
  alias t2g="terminalizer record"
  alias t2gp="terminalizer play"
  alias t2gr="terminalizer render"
fi

# Time &  Task Tracking
alias c='timew'
alias ta='task add'
alias tm='task modify'
alias td='task done'
alias tl='task list'
alias stop='timew stop'
alias tws='timew summary :ids'
alias twm='timew modify'
alias twv='timew move'
alias tt='taskwarrior-tui'

# pwd Management
alias 1pc='create-1pw-login.sh'

# Misc Aliases
alias luamake=/Users/raymonddoran/Development/lua-language-server/3rd/luamake/luamake
alias fork=/Applications/Fork.app/Contents/MacOS/Fork 
alias chatgpt="cd ~/shellgpt/;source shellgpt/bin/activate"
alias aedev=/Users/raymonddoran/Development/AE/code
alias bddev=/Users/raymonddoran/Development/BD
alias ptdev="cd $aedev/pipeline-toolkit"
alias ifpdev="cd $bddev/buildercloud-v2"
alias icat="kitten icat"
alias del="trash"
alias nv='NVIM_APPNAME=nvim-normal-nvim nvim'
alias na='NVIM_APPNAME=nvim-astro nvim'
alias nt='NVIM_APPNAME=nvim-custom-astro nvim'
alias vt='NVIM_APPNAME=nvim-tdf nvim'

# broot
source /Users/raymonddoran/.config/broot/launcher/bash/br

# alacirtty
if [[ $TERM -eq "alacritty" ]]; then
    precmd() {
      print -Pn "\e]0/%n@%m: %~\a"
    }
fi

# pnpm
export PNPM_HOME="/Users/raymonddoran/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

# Temporarily put Scala 2.12 in the path.
export PATH="/opt/homebrew/opt/scala@2.12/bin:$PATH"

# Custom brew command
function brew() {
  command brew "$@" 

  if [[ $* =~ "upgrade" ]] || [[ $* =~ "update" ]] || [[ $* =~ "outdated" ]]; then
    sketchybar --trigger brew_update
  fi
}

#  NeoVim for begginers configuration
# ASKFIY_NVIM=~/.config/nvim-askfiy
# export ASKFIY_NVIM
# alias nvak='XDG_DATA_HOME=$ASKFIY_NVIM/share XDG_CONFIG_HOME=$ASKFIY_NVIM nvim'
# alias astro='nvim -u ~/.config/astronvim/entry.lua'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export GPG_TTY=$(tty)

# Node GYP fix
export CXXFLAGS="-stdlib=libc++"


PATH=~/.console-ninja/.bin:$PATH

# Created by `pipx` on 2024-08-08 19:22:39
export PATH="$PATH:/Users/raymonddoran/.local/bin"

source ~/.config/magic_cli/magic.zsh

# lynx sites in the terminal
if [ -x "$(command -v lynx)" ]; then
  alias ddg="s -b lynx -p duckduckgo"
fi

# terminalizer
if [ -x "$(command -v terminaliz)"]; then
  alias t2g="terminalizer record"
  alias t2gp="terminalizer play"
  alias t2gr="terminalizer render"
fi

# Telehack
alias th="ssh -p 6668 tdf@telehack.com"

# icanhazdadjoke.com
alias dj="curl -H 'Accept: text/plain' https://icanhazdadjoke.com/; echo"

# TMUX
alias tk="tmux kill-session -a"

# Misc
alias t="time"
alias cd..="cd .."
alias ..="cd .."
alias ..."cd ../.."
alias ....="cd ../../.."
alias ./="cd"
alias t=time
alias lg=lazygit
alias st=speedtest
alias wttr="curl wttr.in"

# bun completions
[ -s "/Users/raymonddoran/.bun/_bun" ] && source "/Users/raymonddoran/.bun/_bun"

export ZSH_COPILOT_AI_PROVIDER="openai"  # or "anthropic"
source ~/.zsh-copilot/zsh-copilot.plugin.zsh
eval $(luarocks path --bin)

# setup funky
command -v funky &>/dev/null && eval "$(funky --init zsh)"

# setup mcfly
eval "$(mcfly init zsh)"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/raymonddoran/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/raymonddoran/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/raymonddoran/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/raymonddoran/Downloads/google-cloud-sdk/completion.zsh.inc'; fi

# eval "$(mise activate zsh)"
eval "$(mise activate zsh --shims)"
